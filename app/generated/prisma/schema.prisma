generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String @id @default(cuid())
  clerkId  String @unique
  email    String @unique
  name     String
  username String @unique

  //   skillProfiles SkillProfile[]
  bio       String?
  avatarUrl String?

  interests String[] @default([]) // Array of interests or hobbies

  socialLinks        Json? // Store social links as a JSON object
  preferredLanguages String[]

  occupation String  @default("Not specified")
  location   String?
  timezone   String  @default("UTC")

  ageGroup String? // e.g., "18-24", "25-34", etc.

  skillsOffered String[] @default([]) // Skills the user can teach 
  learningGoals String[] @default([]) // Skills the user wants to learn

  userIntent String[] @default([]) // Intent of the user (e.g., "teach", "learn", "both")

  userAvailability String[] @default([]) // User's availability for sessions

  SessionsTaught  Session[] @relation("SessionsTaught")
  SessionsLearned Session[] @relation("SessionsLearned")

  walletAddress String? @unique

  hasOnboarded Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id          String   @id @default(cuid())
  title       String
  description String?
  tags        String[]
  scheduledAt DateTime
  duration    Int // in minutes

  teacher   User   @relation("SessionsTaught", fields: [teacherId], references: [id])
  teacherId String

  learner   User   @relation("SessionsLearned", fields: [learnerId], references: [id])
  learnerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
